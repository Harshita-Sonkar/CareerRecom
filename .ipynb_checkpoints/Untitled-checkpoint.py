{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "78ae121c-5b7b-483c-82bd-9599b71334c6",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "940d6de7-eb72-4212-b8c1-7ce2be834cd0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Sr.No.</th>\n",
       "      <th>Course</th>\n",
       "      <th>Job profession</th>\n",
       "      <th>Student</th>\n",
       "      <th>Linguistic</th>\n",
       "      <th>Musical</th>\n",
       "      <th>Bodily</th>\n",
       "      <th>Logical - Mathematical</th>\n",
       "      <th>Spatial-Visualization</th>\n",
       "      <th>Interpersonal</th>\n",
       "      <th>...</th>\n",
       "      <th>Naturalist</th>\n",
       "      <th>s/p</th>\n",
       "      <th>P1</th>\n",
       "      <th>P2</th>\n",
       "      <th>P3</th>\n",
       "      <th>P4</th>\n",
       "      <th>P5</th>\n",
       "      <th>P6</th>\n",
       "      <th>P7</th>\n",
       "      <th>P8</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Astronomer\\n</td>\n",
       "      <td>S1</td>\n",
       "      <td>11</td>\n",
       "      <td>5</td>\n",
       "      <td>12</td>\n",
       "      <td>16</td>\n",
       "      <td>17</td>\n",
       "      <td>11</td>\n",
       "      <td>...</td>\n",
       "      <td>19</td>\n",
       "      <td>s1</td>\n",
       "      <td>AVG</td>\n",
       "      <td>POOR</td>\n",
       "      <td>AVG</td>\n",
       "      <td>BEST</td>\n",
       "      <td>BEST</td>\n",
       "      <td>AVG</td>\n",
       "      <td>BEST</td>\n",
       "      <td>BEST</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Astronomer\\n</td>\n",
       "      <td>S2</td>\n",
       "      <td>12</td>\n",
       "      <td>6</td>\n",
       "      <td>12</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>11</td>\n",
       "      <td>...</td>\n",
       "      <td>19</td>\n",
       "      <td>s2</td>\n",
       "      <td>AVG</td>\n",
       "      <td>POOR</td>\n",
       "      <td>AVG</td>\n",
       "      <td>BEST</td>\n",
       "      <td>BEST</td>\n",
       "      <td>AVG</td>\n",
       "      <td>BEST</td>\n",
       "      <td>BEST</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Astronomer\\n</td>\n",
       "      <td>S3</td>\n",
       "      <td>13</td>\n",
       "      <td>7</td>\n",
       "      <td>12</td>\n",
       "      <td>16</td>\n",
       "      <td>15</td>\n",
       "      <td>11</td>\n",
       "      <td>...</td>\n",
       "      <td>19</td>\n",
       "      <td>s3</td>\n",
       "      <td>AVG</td>\n",
       "      <td>POOR</td>\n",
       "      <td>AVG</td>\n",
       "      <td>BEST</td>\n",
       "      <td>BEST</td>\n",
       "      <td>AVG</td>\n",
       "      <td>BEST</td>\n",
       "      <td>BEST</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Astronomer\\n</td>\n",
       "      <td>S4</td>\n",
       "      <td>14</td>\n",
       "      <td>8</td>\n",
       "      <td>12</td>\n",
       "      <td>16</td>\n",
       "      <td>19</td>\n",
       "      <td>11</td>\n",
       "      <td>...</td>\n",
       "      <td>19</td>\n",
       "      <td>s4</td>\n",
       "      <td>AVG</td>\n",
       "      <td>POOR</td>\n",
       "      <td>AVG</td>\n",
       "      <td>BEST</td>\n",
       "      <td>BEST</td>\n",
       "      <td>AVG</td>\n",
       "      <td>BEST</td>\n",
       "      <td>BEST</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Astronomer\\n</td>\n",
       "      <td>S5</td>\n",
       "      <td>13</td>\n",
       "      <td>9</td>\n",
       "      <td>12</td>\n",
       "      <td>16</td>\n",
       "      <td>20</td>\n",
       "      <td>11</td>\n",
       "      <td>...</td>\n",
       "      <td>19</td>\n",
       "      <td>s5</td>\n",
       "      <td>AVG</td>\n",
       "      <td>POOR</td>\n",
       "      <td>AVG</td>\n",
       "      <td>BEST</td>\n",
       "      <td>BEST</td>\n",
       "      <td>AVG</td>\n",
       "      <td>BEST</td>\n",
       "      <td>BEST</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Sr.No.  Course Job profession Student  Linguistic  Musical  Bodily  \\\n",
       "0     1.0     NaN   Astronomer\\n      S1          11        5      12   \n",
       "1     NaN     NaN   Astronomer\\n      S2          12        6      12   \n",
       "2     NaN     NaN   Astronomer\\n      S3          13        7      12   \n",
       "3     NaN     NaN   Astronomer\\n      S4          14        8      12   \n",
       "4     NaN     NaN   Astronomer\\n      S5          13        9      12   \n",
       "\n",
       "   Logical - Mathematical  Spatial-Visualization  Interpersonal  ...  \\\n",
       "0                      16                     17             11  ...   \n",
       "1                      16                     16             11  ...   \n",
       "2                      16                     15             11  ...   \n",
       "3                      16                     19             11  ...   \n",
       "4                      16                     20             11  ...   \n",
       "\n",
       "   Naturalist  s/p   P1    P2   P3    P4    P5   P6    P7    P8  \n",
       "0          19   s1  AVG  POOR  AVG  BEST  BEST  AVG  BEST  BEST  \n",
       "1          19   s2  AVG  POOR  AVG  BEST  BEST  AVG  BEST  BEST  \n",
       "2          19   s3  AVG  POOR  AVG  BEST  BEST  AVG  BEST  BEST  \n",
       "3          19   s4  AVG  POOR  AVG  BEST  BEST  AVG  BEST  BEST  \n",
       "4          19   s5  AVG  POOR  AVG  BEST  BEST  AVG  BEST  BEST  \n",
       "\n",
       "[5 rows x 21 columns]"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_excel('Dataset_project.xlsx')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "abdb38ef-7394-4c20-b199-11d7bfaa041e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Sr.No.', 'Course', 'Job profession', 'Student', 'Linguistic',\n",
       "       'Musical', 'Bodily', 'Logical - Mathematical', 'Spatial-Visualization',\n",
       "       'Interpersonal', 'Intrapersonal', 'Naturalist', 's/p', 'P1', 'P2', 'P3',\n",
       "       'P4', 'P5', 'P6', 'P7', 'P8'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "0ddf23ee-6b53-4a1b-8cbf-fd973db0b328",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(3600, 21)"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "6e04ea1f-40f4-4085-8aa6-8b0ba2ae7a20",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 3600 entries, 0 to 3599\n",
      "Data columns (total 21 columns):\n",
      " #   Column                  Non-Null Count  Dtype  \n",
      "---  ------                  --------------  -----  \n",
      " 0   Sr.No.                  72 non-null     float64\n",
      " 1   Course                  0 non-null      float64\n",
      " 2   Job profession          3600 non-null   object \n",
      " 3   Student                 3600 non-null   object \n",
      " 4   Linguistic              3600 non-null   int64  \n",
      " 5   Musical                 3600 non-null   int64  \n",
      " 6   Bodily                  3600 non-null   int64  \n",
      " 7   Logical - Mathematical  3600 non-null   int64  \n",
      " 8   Spatial-Visualization   3600 non-null   int64  \n",
      " 9   Interpersonal           3600 non-null   int64  \n",
      " 10  Intrapersonal           3600 non-null   int64  \n",
      " 11  Naturalist              3600 non-null   int64  \n",
      " 12  s/p                     3600 non-null   object \n",
      " 13  P1                      3600 non-null   object \n",
      " 14  P2                      3600 non-null   object \n",
      " 15  P3                      3600 non-null   object \n",
      " 16  P4                      3600 non-null   object \n",
      " 17  P5                      3600 non-null   object \n",
      " 18  P6                      3594 non-null   object \n",
      " 19  P7                      3600 non-null   object \n",
      " 20  P8                      3599 non-null   object \n",
      "dtypes: float64(2), int64(8), object(11)\n",
      "memory usage: 590.8+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "62dff7bf-e182-4e5a-aad2-f62f9be835e8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Job profession\n",
       "Astronomer\\n         50\n",
       "Geologist            50\n",
       "Research analyst     50\n",
       "Logistics manager    50\n",
       "Marketing            50\n",
       "                     ..\n",
       "Manager              50\n",
       "Leader               50\n",
       "Mathematician        50\n",
       "Physicist            50\n",
       "Technician           50\n",
       "Name: count, Length: 72, dtype: int64"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Job profession'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "fc135fe1-4cd7-400b-af64-e52b17e5d2b5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Sr.No.                    3528\n",
       "Course                    3600\n",
       "Job profession               0\n",
       "Student                      0\n",
       "Linguistic                   0\n",
       "Musical                      0\n",
       "Bodily                       0\n",
       "Logical - Mathematical       0\n",
       "Spatial-Visualization        0\n",
       "Interpersonal                0\n",
       "Intrapersonal                0\n",
       "Naturalist                   0\n",
       "s/p                          0\n",
       "P1                           0\n",
       "P2                           0\n",
       "P3                           0\n",
       "P4                           0\n",
       "P5                           0\n",
       "P6                           6\n",
       "P7                           0\n",
       "P8                           1\n",
       "dtype: int64"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "c0685429-a3e9-4191-8a6f-1b04935e4573",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Job profession</th>\n",
       "      <th>Linguistic</th>\n",
       "      <th>Musical</th>\n",
       "      <th>Bodily</th>\n",
       "      <th>Logical - Mathematical</th>\n",
       "      <th>Spatial-Visualization</th>\n",
       "      <th>Interpersonal</th>\n",
       "      <th>Intrapersonal</th>\n",
       "      <th>Naturalist</th>\n",
       "      <th>s/p</th>\n",
       "      <th>P1</th>\n",
       "      <th>P2</th>\n",
       "      <th>P3</th>\n",
       "      <th>P4</th>\n",
       "      <th>P5</th>\n",
       "      <th>P6</th>\n",
       "      <th>P7</th>\n",
       "      <th>P8</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Astronomer\\n</td>\n",
       "      <td>11</td>\n",
       "      <td>5</td>\n",
       "      <td>12</td>\n",
       "      <td>16</td>\n",
       "      <td>17</td>\n",
       "      <td>11</td>\n",
       "      <td>18</td>\n",
       "      <td>19</td>\n",
       "      <td>s1</td>\n",
       "      <td>AVG</td>\n",
       "      <td>POOR</td>\n",
       "      <td>AVG</td>\n",
       "      <td>BEST</td>\n",
       "      <td>BEST</td>\n",
       "      <td>AVG</td>\n",
       "      <td>BEST</td>\n",
       "      <td>BEST</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Astronomer\\n</td>\n",
       "      <td>12</td>\n",
       "      <td>6</td>\n",
       "      <td>12</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>11</td>\n",
       "      <td>18</td>\n",
       "      <td>19</td>\n",
       "      <td>s2</td>\n",
       "      <td>AVG</td>\n",
       "      <td>POOR</td>\n",
       "      <td>AVG</td>\n",
       "      <td>BEST</td>\n",
       "      <td>BEST</td>\n",
       "      <td>AVG</td>\n",
       "      <td>BEST</td>\n",
       "      <td>BEST</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Astronomer\\n</td>\n",
       "      <td>13</td>\n",
       "      <td>7</td>\n",
       "      <td>12</td>\n",
       "      <td>16</td>\n",
       "      <td>15</td>\n",
       "      <td>11</td>\n",
       "      <td>18</td>\n",
       "      <td>19</td>\n",
       "      <td>s3</td>\n",
       "      <td>AVG</td>\n",
       "      <td>POOR</td>\n",
       "      <td>AVG</td>\n",
       "      <td>BEST</td>\n",
       "      <td>BEST</td>\n",
       "      <td>AVG</td>\n",
       "      <td>BEST</td>\n",
       "      <td>BEST</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Astronomer\\n</td>\n",
       "      <td>14</td>\n",
       "      <td>8</td>\n",
       "      <td>12</td>\n",
       "      <td>16</td>\n",
       "      <td>19</td>\n",
       "      <td>11</td>\n",
       "      <td>18</td>\n",
       "      <td>19</td>\n",
       "      <td>s4</td>\n",
       "      <td>AVG</td>\n",
       "      <td>POOR</td>\n",
       "      <td>AVG</td>\n",
       "      <td>BEST</td>\n",
       "      <td>BEST</td>\n",
       "      <td>AVG</td>\n",
       "      <td>BEST</td>\n",
       "      <td>BEST</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Astronomer\\n</td>\n",
       "      <td>13</td>\n",
       "      <td>9</td>\n",
       "      <td>12</td>\n",
       "      <td>16</td>\n",
       "      <td>20</td>\n",
       "      <td>11</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>s5</td>\n",
       "      <td>AVG</td>\n",
       "      <td>POOR</td>\n",
       "      <td>AVG</td>\n",
       "      <td>BEST</td>\n",
       "      <td>BEST</td>\n",
       "      <td>AVG</td>\n",
       "      <td>BEST</td>\n",
       "      <td>BEST</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Job profession  Linguistic  Musical  Bodily  Logical - Mathematical  \\\n",
       "0   Astronomer\\n          11        5      12                      16   \n",
       "1   Astronomer\\n          12        6      12                      16   \n",
       "2   Astronomer\\n          13        7      12                      16   \n",
       "3   Astronomer\\n          14        8      12                      16   \n",
       "4   Astronomer\\n          13        9      12                      16   \n",
       "\n",
       "   Spatial-Visualization  Interpersonal  Intrapersonal  Naturalist s/p   P1  \\\n",
       "0                     17             11             18          19  s1  AVG   \n",
       "1                     16             11             18          19  s2  AVG   \n",
       "2                     15             11             18          19  s3  AVG   \n",
       "3                     19             11             18          19  s4  AVG   \n",
       "4                     20             11             19          19  s5  AVG   \n",
       "\n",
       "     P2   P3    P4    P5   P6    P7    P8  \n",
       "0  POOR  AVG  BEST  BEST  AVG  BEST  BEST  \n",
       "1  POOR  AVG  BEST  BEST  AVG  BEST  BEST  \n",
       "2  POOR  AVG  BEST  BEST  AVG  BEST  BEST  \n",
       "3  POOR  AVG  BEST  BEST  AVG  BEST  BEST  \n",
       "4  POOR  AVG  BEST  BEST  AVG  BEST  BEST  "
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.drop(['Sr.No.','Course','Student'], axis=1, inplace=True)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "9359a6a9-98fb-42f9-b98e-fcee3a7a0068",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.duplicated().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c0a64fdb-2ba6-49ab-8d4f-a408bbc79fe3",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
